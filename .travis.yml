dist: bionic

before_install:
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew update ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    yes | sudo port install python$PYTHON;
    yes | sudo port install py$PYTHON-pip;
    sudo port select --set python3 python$PYTHON;
    sudo port select --set pip pip$PYTHON;
    pip install pyinstaller --user;
    export PATH=$PATH:/Users/travis/Library/Python/$PYTHON/bin;
    fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo wget -O- http://neuro.debian.net/lists/bionic.us-ca.full | sudo tee /etc/apt/sources.list.d/neurodebian.sources.list ; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo wget -O- http://neuro.debian.net/lists/bionic.us-ca.full | sudo tee /etc/apt/sources.list.d/neurodebian.sources.list ; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-key adv --recv-keys --keyserver pool.sks-keyservers.net 2649A5A9 || { sudo wget -q -O- http://neuro.debian.net/_static/neuro.debian.net.asc | sudo apt-key add -; } ; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get update ; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get update ; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get install -y singularity-container ; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get install build-essential libblas-dev liblapack-dev python3-tk ; fi

jobs:
  include:
    - os: linux
      dist: bionic
      language: python
      python: 3.6
    - os: linux
      dist: bionic
      language: python
      python: 3.7
    - os: linux
      dist: bionic
      language: python
      python: 3.8
    - os: osx
      language: generic
      env: PYTHON=36
    - os: osx
      language: generic
      env: PYTHON=37
    - os: osx
      language: generic
      env: PYTHON=38
    - stage: Deploy Docker latest
      if: branch = master AND type = push
      script:
        - travis_wait 60 docker build -t docker-scilpy containers
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker tag docker-scilpy $DOCKER_USERNAME/docker-scilpy:latest
        - travis_wait 60 docker push $DOCKER_USERNAME/docker-scilpy:latest
    - stage: Deploy Docker release
      if: tag IS present
      script:
        - travis_wait 60 docker build -t docker-scilpy containers
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker tag docker-scilpy $DOCKER_USERNAME/docker-scilpy:$TRAVIS_TAG
        - travis_wait 60 docker push $DOCKER_USERNAME/docker-scilpy:$TRAVIS_TAG
    - stage: Deploy Singularity release
      if: tag IS present
      script:
        - travis_wait 60 sudo singularity build singularity_scilpy_${TRAVIS_TAG}.img containers/singularity_scilpy.def
        - singularity exec singularity_scilpy_${TRAVIS_TAG}.img echo "Singularity test"
      deploy:
        provider: releases
        api_key: $GITHUB_OAUTH_TOKEN
        file: singularity_scilpy_${TRAVIS_TAG}.img
        skip_cleanup: true
        on:
          tags: true

stage: Tests
script:
  - python setup.py develop
  - export MPLBACKEND="agg"
  - pytest -v
