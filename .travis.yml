dist: bionic

before_install:
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo wget -O- http://neuro.debian.net/lists/bionic.us-ca.full | sudo tee /etc/apt/sources.list.d/neurodebian.sources.list ; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo wget -O- http://neuro.debian.net/lists/bionic.us-ca.full | sudo tee /etc/apt/sources.list.d/neurodebian.sources.list ; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-key adv --recv-keys --keyserver pool.sks-keyservers.net 2649A5A9 || { sudo wget -q -O- http://neuro.debian.net/_static/neuro.debian.net.asc | sudo apt-key add -; } ; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get update ; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get update ; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get install -y singularity-container ; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get install build-essential libblas-dev liblapack-dev python3-tk ; fi

jobs:
  include:
    - os: linux
      dist: bionic
      language: python
      python: 3.6

    - os: linux
      dist: bionic
      language: python
      python: 3.7

    - os: linux
      dist: bionic
      language: python
      python: 3.8

    # Inspired by https://github.com/pyload/pyload/blob/main/.travis.yml
    - os: osx
      language: generic
      env:
        - TOXENV=py3
        - HOMEBREW_NO_INSTALL_CLEANUP=1
        - HOMEBREW_NO_ANALYTICS=1
      before_cache:
        - rm -f "$HOME/Library/Caches/pip/log/debug.log"
      cache:
        directories:
          - "$HOME/Library/Caches/pip"
      addons:
        homebrew:
          update: true
          packages: pyenv
      before_install:
        - which python
        - export PATH=$(pyenv root)/shims:$PATH
        - which python
        - pyenv install 3.6.0
        - pyenv global 3.6.0
        - python --version
        - python -m pip install --upgrade virtualenv
        - virtualenv -p python --system-site-packages "$HOME/venv"
        - source "$HOME/venv/bin/activate"

    # Inspired by https://github.com/pyload/pyload/blob/main/.travis.yml
    - os: osx
      language: generic
      env:
        - TOXENV=py3
        - HOMEBREW_NO_INSTALL_CLEANUP=1
        - HOMEBREW_NO_ANALYTICS=1
      before_cache:
        - rm -f "$HOME/Library/Caches/pip/log/debug.log"
      cache:
        directories:
          - "$HOME/Library/Caches/pip"
      addons:
        homebrew:
          update: true
          packages: pyenv
      before_install:
        - which python
        - export PATH=$(pyenv root)/shims:$PATH
        - which python
        - pyenv install 3.7.0
        - pyenv global 3.7.0
        - python --version
        - python -m pip install --upgrade virtualenv
        - virtualenv -p python --system-site-packages "$HOME/venv"
        - source "$HOME/venv/bin/activate"

    # Inspired by https://github.com/pyload/pyload/blob/main/.travis.yml
    - os: osx
      language: generic
      env:
        - TOXENV=py3
        - HOMEBREW_NO_INSTALL_CLEANUP=1
        - HOMEBREW_NO_ANALYTICS=1
      before_cache:
        - rm -f "$HOME/Library/Caches/pip/log/debug.log"
      cache:
        directories:
          - "$HOME/Library/Caches/pip"
      addons:
        homebrew:
          update: true
          packages: pyenv
      before_install:
        - which python
        - export PATH=$(pyenv root)/shims:$PATH
        - which python
        - pyenv install 3.8.0
        - pyenv global 3.8.0
        - python --version
        - python -m pip install --upgrade virtualenv
        - virtualenv -p python --system-site-packages "$HOME/venv"
        - source "$HOME/venv/bin/activate"

    - stage: Deploy Docker latest
      if: branch = master AND type = push
      script:
        - travis_wait 60 docker build -t docker-scilpy containers
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker tag docker-scilpy $DOCKER_USERNAME/docker-scilpy:latest
        - travis_wait 60 docker push $DOCKER_USERNAME/docker-scilpy:latest

    - stage: Deploy Docker release
      if: tag IS present
      script:
        - travis_wait 60 docker build -t docker-scilpy containers
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker tag docker-scilpy $DOCKER_USERNAME/docker-scilpy:$TRAVIS_TAG
        - travis_wait 60 docker push $DOCKER_USERNAME/docker-scilpy:$TRAVIS_TAG

    - stage: Deploy Singularity release
      if: tag IS present
      script:
        - travis_wait 60 sudo singularity build singularity_scilpy_${TRAVIS_TAG}.img containers/singularity_scilpy.def
        - singularity exec singularity_scilpy_${TRAVIS_TAG}.img echo "Singularity test"
      deploy:
        provider: releases
        api_key: $GITHUB_OAUTH_TOKEN
        file: singularity_scilpy_${TRAVIS_TAG}.img
        skip_cleanup: true
        on:
          tags: true

stage: Tests
script:
  - python setup.py develop
  - export MPLBACKEND="agg"
  - pytest -v
